---
import type { CollectionEntry } from "astro:content";
import Layout from "../layouts/Layout.astro";
import Prose from "../components/Prose.astro";
import banner from "../assets/speaking/herotest.jpeg";
import Image from "astro/components/Image.astro";
import { Icon } from "astro-icon/components";
import { SEO } from "astro-seo";
import "medium-zoom/dist/style.css";

type Props = CollectionEntry<"posts">["data"];

const { title, author, description, pubDate, image } = Astro.props;
// console.log(image);
// console.log(Astro.props);

const tags = ["Psychology", "Science"];
---

<Layout title={title} description={description} image={image} author={author}>
  <div id="" class="font-semibold text-black">
    <div class="max-w-3xl p-6 md:mx-auto">
      <div class="">
        <!-- <img width={1020} height={510} src={image} alt="" /> -->

        <h1 class="text-3xl text-zinc-800 font-extrabold sm:text-[40px]">{title}</h1>
        <!-- <p class="font-light text-gray-500 italics"><em>{frontmatter.description}</em></p> -->
        <div class="flex gap-3 py-4">
          <p class="text-zinc-500">
            {
              pubDate.toLocaleDateString("en-US", {
                timeZone: "UTC",
                month: "long",
                day: "2-digit",
                year: "numeric",
              })
            }
          </p>
          <p class="text-zinc-500">|</p>
          <p class="text-zinc-500">{author}</p>
        </div>
        <div class="border-2 border-t-cyan-600 max-w-44"></div>

        <!-- <div class="flex gap-3 pt-2 font-lg">
          <a href="https://twitter.com/intent/tweet?url={url}&text={description}&via={username}"
            ><Icon name="devicon:linkedin" size={30} class="" /></a
          >
          <Icon name="devicon:twitter" size={30} class="" />
          <Icon name="logos:reddit-icon" size={30} class="" />

          <a
            href="https://www.linkedin.com/shareArticle?url=<URL>&title=<TITLE>&summary=<SUMMARY>&source=<SOURCE_URL>"
          >
            LinkedIn
          </a>
        </div> -->
        <!-- <div class="flex flex-wrap items-center gap-1 my-4">
          <p><span class="italic">Tags: </span></p>
          {
            tags.map((tag) => {
              return (
                <button disabled class="px-2 py-1 text-white bg-gray-800 rounded-sm">
                  {tag}
                </button>
              );
            })
          }
        </div> -->
        <!-- <div class="bg-auto">
          <Image src={banner} alt={title} class="m-auto aspect-video" />
        </div> -->
      </div>
    </div>
  </div>
  <div class="max-w-3xl px-6 pb-12 md:mx-auto">
    <Prose class="font-light">
      <slot />
    </Prose>
  </div>
</Layout>
<style is:global>
  /* Define cascade layers with zoom-overlays having highest priority */
  @layer base, components, zoom-overlays;

  @layer zoom-overlays {
    .medium-zoom-overlay {
      z-index: 9999;
    }

    .medium-zoom-image--opened {
      z-index: 10000;
    }
  }

  /* Fallback for browsers that don't support cascade layers */
  @supports not (at-rule(@layer)) {
    .medium-zoom-overlay {
      z-index: 9999 !important;
    }

    .medium-zoom-image--opened {
      z-index: 10000 !important;
    }
  }
</style>
<script>
  import mediumZoom from "medium-zoom";

  // Add captions to images with alt text
  document.querySelectorAll(".prose img").forEach((img) => {
    const imgElement = img as HTMLImageElement;
    if (imgElement.alt && imgElement.alt.trim() !== "") {
      // Check if already wrapped in figure
      if (imgElement.parentElement?.tagName !== "FIGURE") {
        const fig = document.createElement("figure");
        const caption = document.createElement("figcaption");
        caption.textContent = imgElement.alt;
        caption.className = "text-center text-sm text-gray-600 mt-2 italic";

        // Insert figure before the image
        const parent = imgElement.parentNode;
        if (parent) {
          parent.insertBefore(fig, imgElement);
          // Move image into figure
          fig.appendChild(imgElement);
          // Add caption
          fig.appendChild(caption);
        }
      }
    }
  });

  mediumZoom(".prose img", {
    margin: 24,
  });
</script>
